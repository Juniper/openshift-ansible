---
- name: Set core dump pattern on node
  command: echo "/var/crashes/core.%e.%p.%h.%t" > /proc/sys/kernel/core_pattern

- name: Add iptable rules to open ports used by Contrail services
  command: iptables -I OS_FIREWALL_ALLOW 1 -p tcp --dport "{{ item.port }}" -j ACCEPT -m comment --comment "{{ item.service }}"
  with_items:
    - { port: '8085', service: 'contrail-vrouter-agent-introspect' }
    - { port: '9091', service: 'contrail-cni' }
  when:
    - not r_openshift_node_use_firewalld | default(false) | bool

- name: Add iptable rules to open dns port
  command: iptables -I INPUT 4 -j ACCEPT -p udp --dport 53
  when:
    - not r_openshift_node_use_firewalld | default(false) | bool

- name: Save iptables rules
  command: service iptables save

- name: Stat for loopback plugin
  stat:
    path: "/opt/cni/bin/loopback"
  register: loopback

- name: set flag to install cni default to true
  set_fact:
    install_cni_binaries: "True"

- name: set flag to install cni
  set_fact:
    install_cni_binaries: "False"
  when:
    - "{{ ansible_default_ipv4['address'] in groups.masters }}"
    - "{{ ansible_default_ipv4['address'] not in contrail_masters }}"

- when:
  - loopback.stat.exists == False
  - install_cni_binaries | bool

  block:
  - name: Ensure CNI bin path exists
    file:
      path: "/opt/cni/bin"
      recurse: True
      state: directory

  - name: Download & extract loopback CNI binary
    unarchive:
      src: "https://github.com/containernetworking/cni/releases/download/{{ cni_version }}/cni-{{ cni_version }}.tgz"
      dest: "/opt/cni/bin"
      mode: a+x
      remote_src: True
    register: result
    until: result is success
    retries: 3
    delay: 10
